import { ClientPerspective, InitializedClientConfig, LiveEventGoAway, SyncTag } from "@sanity/client";

//#region src/live/client-components/live/SanityLive.d.ts

/**
* @public
*/
interface SanityLiveProps extends Pick<InitializedClientConfig, "projectId" | "dataset" | "apiHost" | "apiVersion" | "useProjectHostname" | "token" | "requestTagPrefix"> {
  draftModeEnabled: boolean;
  draftModePerspective?: ClientPerspective;
  refreshOnMount?: boolean;
  refreshOnFocus?: boolean;
  refreshOnReconnect?: boolean;
  requestTag: string | undefined;
  /**
  * Handle errors from the Live Events subscription.
  * By default it's reported using `console.error`, you can override this prop to handle it in your own way.
  */
  onError?: (error: unknown) => void;
  intervalOnGoAway?: number | false;
  onGoAway?: (event: LiveEventGoAway, intervalOnGoAway: number | false) => void;
  revalidateSyncTags?: (tags: SyncTag[]) => Promise<void | "refresh">;
}
/**
* @public
*/
declare function SanityLive(props: SanityLiveProps): React.JSX.Element | null;
//#endregion
export { type SanityLiveProps, SanityLive as default };
//# sourceMappingURL=index.d.ts.map