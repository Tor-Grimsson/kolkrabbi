{"version":3,"file":"index.js","names":["imageLoader: ImageLoader","srcUrl: URL"],"sources":["../../src/image/imageLoader.ts","../../src/image/Image.tsx"],"sourcesContent":["import type {ImageLoader} from 'next/image'\n\n/**\n * @alpha\n */\nexport const imageLoader: ImageLoader = ({src, width, quality}) => {\n  const url = new URL(src)\n  url.searchParams.set('auto', 'format')\n  if (!url.searchParams.has('fit')) {\n    url.searchParams.set('fit', url.searchParams.has('h') ? 'min' : 'max')\n  }\n  if (url.searchParams.has('h') && url.searchParams.has('w')) {\n    const originalHeight = parseInt(url.searchParams.get('h')!, 10)\n    const originalWidth = parseInt(url.searchParams.get('w')!, 10)\n    url.searchParams.set('h', Math.round((originalHeight / originalWidth) * width).toString())\n  }\n  url.searchParams.set('w', width.toString())\n  if (quality) {\n    url.searchParams.set('q', quality.toString())\n  }\n  return url.href\n}\n","import NextImage, {type ImageProps as NextImageProps} from 'next/image'\n\nimport {imageLoader} from './imageLoader'\n\n/**\n * @alpha\n */\nexport interface ImageProps extends Omit<NextImageProps, 'loader' | 'src'> {\n  /**\n   * The `loader` prop is not supported on `Image` components. Use `next/image` directly to use a custom loader.\n   */\n  loader?: never\n  /**\n   * Must be a string that is a valid URL to an image on the Sanity Image CDN.\n   */\n  src: string\n}\n\n/**\n * @alpha\n */\nexport function Image(props: ImageProps): React.JSX.Element {\n  const {loader, src, ...rest} = props\n  if (loader) {\n    throw new TypeError(\n      'The `loader` prop is not supported on `Image` components. Use `next/image` directly to use a custom loader.',\n    )\n  }\n  let srcUrl: URL\n  try {\n    srcUrl = new URL(src)\n    if (props.height) {\n      srcUrl.searchParams.set('h', `${props.height}`)\n    }\n    if (props.width) {\n      srcUrl.searchParams.set('w', `${props.width}`)\n    }\n  } catch (err) {\n    throw new TypeError('The `src` prop must be a valid URL to an image on the Sanity Image CDN.', {\n      cause: err,\n    })\n  }\n  return <NextImage {...rest} src={srcUrl.toString()} loader={imageLoader} />\n}\n"],"mappings":";;;AAKA,MAAaA,eAA4B,EAAC,KAAK,OAAO,cAAa;CACjE,MAAM,MAAM,IAAI,IAAI,IAAI;AACxB,KAAI,aAAa,IAAI,QAAQ,SAAS;AACtC,KAAI,CAAC,IAAI,aAAa,IAAI,MAAM,CAC9B,KAAI,aAAa,IAAI,OAAO,IAAI,aAAa,IAAI,IAAI,GAAG,QAAQ,MAAM;AAExE,KAAI,IAAI,aAAa,IAAI,IAAI,IAAI,IAAI,aAAa,IAAI,IAAI,EAAE;EAC1D,MAAM,iBAAiB,SAAS,IAAI,aAAa,IAAI,IAAI,EAAG,GAAG;EAC/D,MAAM,gBAAgB,SAAS,IAAI,aAAa,IAAI,IAAI,EAAG,GAAG;AAC9D,MAAI,aAAa,IAAI,KAAK,KAAK,MAAO,iBAAiB,gBAAiB,MAAM,CAAC,UAAU,CAAC;;AAE5F,KAAI,aAAa,IAAI,KAAK,MAAM,UAAU,CAAC;AAC3C,KAAI,QACF,KAAI,aAAa,IAAI,KAAK,QAAQ,UAAU,CAAC;AAE/C,QAAO,IAAI;;ACCb,SAAgB,MAAM,OAAsC;CAC1D,MAAM,EAAC,QAAQ,IAAK,GAAG,SAAQ;AAC/B,KAAI,OACF,OAAM,IAAI,UACR,8GACD;CAEH,IAAIC;AACJ,KAAI;AACF,WAAS,IAAI,IAAI,IAAI;AACrB,MAAI,MAAM,OACR,QAAO,aAAa,IAAI,KAAK,GAAG,MAAM,SAAS;AAEjD,MAAI,MAAM,MACR,QAAO,aAAa,IAAI,KAAK,GAAG,MAAM,QAAQ;UAEzC,KAAK;AACZ,QAAM,IAAI,UAAU,2EAA2E,EAC7F,OAAO,KACR,CAAC;;AAEJ,QAAO,oBAAC,WAAA;EAAU,GAAI;EAAM,KAAK,OAAO,UAAU;EAAE,QAAQ;GAAe"}