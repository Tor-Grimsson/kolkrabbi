{"version":3,"file":"NextStudio.js","names":[],"sources":["../src/studio/client-component/createHashHistoryForStudio.ts","../src/studio/client-component/useIsMounted.ts","../src/studio/client-component/NextStudio.tsx"],"sourcesContent":["import {createHashHistory, type History, type Listener} from 'history'\n\n/** @internal */\nexport function createHashHistoryForStudio(): History {\n  const history = createHashHistory()\n  return {\n    get action() {\n      return history.action\n    },\n    get location() {\n      return history.location\n    },\n    get createHref() {\n      return history.createHref\n    },\n    get push() {\n      return history.push\n    },\n    get replace() {\n      return history.replace\n    },\n    get go() {\n      return history.go\n    },\n    get back() {\n      return history.back\n    },\n    get forward() {\n      return history.forward\n    },\n    get block() {\n      return history.block\n    },\n    // Overriding listen to workaround a problem where native history provides history.listen(location => void), but the npm package is history.listen(({action, location}) => void)\n    listen(listener: Listener) {\n      // return history.listen(({ action, location }) => {\n      return history.listen(({location}) => {\n        // console.debug('history.listen', action, location)\n        // @ts-expect-error -- working around a bug? in studio\n        listener(location)\n      })\n    },\n  }\n}\n","import {useSyncExternalStore} from 'react'\n\n/** @internal */\nexport function useIsMounted(): boolean {\n  return useSyncExternalStore(\n    emptySubscribe,\n    () => true,\n    () => false,\n  )\n}\n// eslint-disable-next-line no-empty-function\nconst emptySubscribe = () => () => {}\n","import {useMemo} from 'react'\nimport {Studio, type StudioProps} from 'sanity'\n\nimport {NextStudioLayout} from '../NextStudioLayout'\nimport {NextStudioNoScript} from '../NextStudioNoScript'\nimport {createHashHistoryForStudio} from './createHashHistoryForStudio'\nimport {useIsMounted} from './useIsMounted'\n\n/** @public */\nexport interface NextStudioProps extends StudioProps {\n  children?: React.ReactNode\n  /**\n   * Render the <noscript> tag\n   * @defaultValue true\n   * @alpha\n   */\n  unstable__noScript?: boolean\n  /**\n   * The 'hash' option is new feature that is not yet stable for production, but is available for testing and its API won't change in a breaking way.\n   * If 'hash' doesn't work for you, or if you want to use a memory based history, you can use the `unstable_history` prop instead.\n   * @alpha\n   * @defaultValue 'browser'\n   */\n  history?: 'browser' | 'hash'\n}\n/**\n * Override how the Studio renders by passing children.\n * This is useful for advanced use cases where you're using StudioProvider and StudioLayout instead of Studio:\n * ```\n * import {StudioProvider, StudioLayout} from 'sanity'\n * import {NextStudio} from 'next-sanity/studio'\n * <NextStudio config={config}>\n *   <StudioProvider config={config}>\n *     <CustomComponentThatUsesContextFromStudioProvider />\n *     <StudioLayout />\n *   </StudioProvider>\n * </NextStudio>\n * ```\n * @public\n */\nexport default function NextStudioComponent({\n  children,\n  config,\n  unstable__noScript = true,\n  scheme,\n  history,\n  ...props\n}: NextStudioProps): React.JSX.Element {\n  const isMounted = useIsMounted()\n  const unstableHistory = useMemo<typeof props.unstable_history>(() => {\n    if (props.unstable_history && history) {\n      throw new Error('Cannot use both `unstable_history` and `history` props at the same time')\n    }\n\n    if (isMounted && history === 'hash') {\n      return createHashHistoryForStudio()\n    }\n    return props.unstable_history\n  }, [history, isMounted, props.unstable_history])\n\n  return (\n    <>\n      {unstable__noScript && <NextStudioNoScript />}\n      <NextStudioLayout>\n        {history === 'hash' && !isMounted\n          ? null\n          : children || (\n              <Studio\n                config={config}\n                scheme={scheme}\n                unstable_globalStyles\n                {...props}\n                unstable_history={unstableHistory}\n              />\n            )}\n      </NextStudioLayout>\n    </>\n  )\n}\n"],"mappings":";;;;;AAGA,SAAgB,6BAAsC;CACpD,MAAM,UAAU,mBAAmB;AACnC,QAAO;EACL,IAAI,SAAS;AACX,UAAO,QAAQ;;EAEjB,IAAI,WAAW;AACb,UAAO,QAAQ;;EAEjB,IAAI,aAAa;AACf,UAAO,QAAQ;;EAEjB,IAAI,OAAO;AACT,UAAO,QAAQ;;EAEjB,IAAI,UAAU;AACZ,UAAO,QAAQ;;EAEjB,IAAI,KAAK;AACP,UAAO,QAAQ;;EAEjB,IAAI,OAAO;AACT,UAAO,QAAQ;;EAEjB,IAAI,UAAU;AACZ,UAAO,QAAQ;;EAEjB,IAAI,QAAQ;AACV,UAAO,QAAQ;;EAGjB,OAAO,UAAoB;AAEzB,UAAO,QAAQ,QAAQ,EAAC,eAAc;AAGpC,aAAS,SAAS;KAClB;;EAEL;;ACvCH,SAAgB,eAAwB;AACtC,QAAO,qBACL,sBACM,YACA,MACP;;AAGH,MAAM,6BAA6B;AC6BnC,SAAwB,oBAAoB,EAC1C,UACA,QACA,qBAAqB,MACrB,QACA,QACA,GAAG,SACkC;CACrC,MAAM,YAAY,cAAc;CAChC,MAAM,kBAAkB,cAA6C;AACnE,MAAI,MAAM,oBAAoB,QAC5B,OAAM,IAAI,MAAM,0EAA0E;AAG5F,MAAI,aAAa,YAAY,OAC3B,QAAO,4BAA4B;AAErC,SAAO,MAAM;IACZ;EAAC;EAAS;EAAW,MAAM;EAAiB,CAAC;AAEhD,QACE,qBAAA,UAAA,EAAA,UAAA,CACG,sBAAsB,oBAAC,oBAAA,EAAA,CAAqB,EAC7C,oBAAC,kBAAA,EAAA,UACE,YAAY,UAAU,CAAC,YACpB,OACA,YACE,oBAAC,QAAA;EACS;EACA;EACR,uBAAA;EACA,GAAI;EACJ,kBAAkB;GAClB,EAAA,CAES,CAAA,EAAA,CAClB"}